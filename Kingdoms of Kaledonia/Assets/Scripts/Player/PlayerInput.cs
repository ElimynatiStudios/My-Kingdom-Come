using UnityEngine;
using System.Collections;

[RequireComponent(typeof (Player))] //Unity specific, forces the object that uses PlayerInput to also attach a Player component (because we need one to have player input)
public class PlayerInput : MonoBehaviour {

	//================================================================================================
	//[PlayerInput Variables]//
	//================================================================================================
	public Player player;
	public Camera camera;
	//================================================================================================



	//================================================================================================
	//[Awake]// --- Called before Start, used to initialise variables before game
	//================================================================================================
	void Awake () {
		
	}
	//================================================================================================



	//================================================================================================
	//[Start]// --- Called before Update, used to pass any information after all initialisation
	//================================================================================================
	void Start () {
		player = transform.GetComponent<Player> ();
		camera = Camera.main; //In singleplayer okay to use Camera.main as there is only one, in networked game we need multiple cameras though, havent looked into this yet
	}
	//================================================================================================



	//================================================================================================
	//[Update]// --- Called every frame to implement game behaviour
	//================================================================================================
	void Update () {
		if (player.isHuman) {
			if (player.isInDirectMode) {
				//DIRECT CONTROL
				DirectModeMouseActivity();
				DirectModeKeysActivity ();
			} else {
				//RTS CONTROL
				RTSModeCameraMovement();
				RTSModeCameraRotation ();
				RTSModeCameraZoom ();
				RTSModeMouseActivity ();
				RTSModeKeysActivity ();
			}
		}
	}
	//================================================================================================



	//================================================================================================
	//[RTSModeCameraMovement]// --- Camera movement controls when in RTS mode
	//================================================================================================
	private void RTSModeCameraMovement () {

	}
	//================================================================================================



	//================================================================================================
	//[RTSModeCameraRotation]// --- Camera rotation controls when in RTS mode
	//================================================================================================
	private void RTSModeCameraRotation () {

	}
	//================================================================================================



	//================================================================================================
	//[RTSModeCameraZoom]// --- Camera zoom controls when in RTS mode
	//================================================================================================
	private void RTSModeCameraZoom () {

	}
	//================================================================================================



	//================================================================================================
	//[RTSModeMouseActivity]// --- Mouse controls when in RTS mode
	//================================================================================================
	private void RTSModeMouseActivity () {

	}
	//================================================================================================



	//================================================================================================
	//[RTSModeKeysActivity]// --- Camera movement controls when in RTS mode
	//================================================================================================
	private void RTSModeKeysActivity () {

	}
	//================================================================================================



	//================================================================================================
	//[DirectModeMouseActivity]// --- Mouse controls when in direct mode
	//================================================================================================
	private void DirectModeMouseActivity () {

	}
	//================================================================================================



	//================================================================================================
	//[DirectModeKeysActivity]// --- Camera movement controls when in direct mode
	//================================================================================================
	private void DirectModeKeysActivity () {

	}
	//================================================================================================

}
